<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.qaprosoft.mybatisExample.interfaces.CountryMapper">

    <insert id="createCountry" parameterType="com.qaprosoft.mybatisExample.model.Country" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        insert into world.COUNTRIES (COUNTRY_NAME, COUNTRY_POPULATION, COUNTRY_AREA) values
        (
        #{name},
        #{population},
        #{area}
        )
  ]]>
    </insert>


    <insert id="createCountries" parameterType="com.qaprosoft.mybatisExample.model.Country" useGeneratedKeys="true">
        <![CDATA[
        insert into world.COUNTRIES (COUNTRY_NAME, COUNTRY_POPULATION, COUNTRY_AREA) values
        ]]>
        <foreach item="country" collection="list" separator=",">
            (#{country.name}, #{country.population} , #{country.area})
        </foreach>
    </insert>


    <sql id="getCountry">
        <![CDATA[
		   SELECT
		   CO.COUNTRY_ID,
		   CO.COUNTRY_NAME,
           CO.COUNTRY_POPULATION,
           CO.COUNTRY_AREA,
           U.UNION_ID,
           U.UNION_NAME,
		   C.CITY_ID,
		   C.CITY_NAME,
		   C.CITY_POPULATION,
		   C.CITY_STATUS
           FROM  COUNTRIES CO
           join COUNTRIES_UNIONS CU
           on CO.COUNTRY_ID=CU.COUNTRIES_ID
           join UNIONS U
           on CU.UNIONS_ID=U.UNION_ID
           join CITIES C
           on CO.COUNTRY_ID=C.COUNTRIES_ID
		]]>
    </sql>


    <select id="getCountryById" resultMap="CountryResultMap">
        <include refid="getCountry"/>
        <![CDATA[
			WHERE CO.COUNTRY_ID = #{id};
		]]>
    </select>


    <select id="getCountryByName" resultMap="CountryResultMap">
        <include refid="getCountry"/>
        <![CDATA[
			WHERE CO.COUNTRY_NAME = #{name};
		]]>
    </select>

    <update id="updateCountry">
        <![CDATA[
			UPDATE
			    world.COUNTRIES
		]]>
        <set>
            <if test="null != name">
                <![CDATA[
		               COUNTRY_NAME = #{name},
		            ]]>
            </if>
            <if test="null != population">
                <![CDATA[
		               COUNTRY_POPULATION = #{population},
		            ]]>
            </if>
            <if test="null != area">
                <![CDATA[
		               COUNTRY_AREA = #{area},
		            ]]>
            </if>
        </set>
        <![CDATA[
			WHERE
			    COUNTRY_ID = #{id}
		]]>
    </update>


    <sql id="deleteCountry">
        <![CDATA[
			DELETE FROM world.COUNTRIES
		]]>
    </sql>


    <delete id="deleteAllCountries">
    <include refid="deleteCountry"/>
    </delete>

    <delete id="deleteCountry">
        <include refid="deleteCountry"/>
        <![CDATA[
        WHERE COUNTRY_NAME = #{name}
         ]]>
    </delete>

    <delete id="deleteCountryById">
        <include refid="deleteCountry"/>
        <![CDATA[
        WHERE COUNTRY_ID = #{id}
        ]]>
    </delete>


    <select id="getCountAllCountries"  resultType="java.lang.Long" >
        <![CDATA[
		select count(*) from world.COUNTRIES
		]]>
    </select>

    <resultMap id="CountryResultMap" type="com.qaprosoft.mybatisExample.model.Country" autoMapping="false">
        <id property="id" column="COUNTRY_ID"/>
        <result property="name" column="COUNTRY_NAME"/>
        <result property="population" column="COUNTRY_POPULATION"/>
        <result property="area" column="COUNTRY_AREA"/>
        <collection property="cities" ofType="com.qaprosoft.mybatisExample.model.City" >
            <id property="id" column="CITY_ID"/>
            <result property="name" column="CITY_NAME"/>
            <result property="cityPopulation" column="CITY_POPULATION"/>
            <result property="cityStatus" column="CITY_STATUS"/>
        </collection>
        <collection property="unions" ofType="com.qaprosoft.mybatisExample.model.Union">
            <id property="id" column="UNION_ID"/>
            <result property="name" column="UNION_NAME"/>
        </collection>
    </resultMap>


</mapper>